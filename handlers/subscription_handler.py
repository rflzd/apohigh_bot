# handlers/subscription_handler.py
from telegram import InlineKeyboardButton, InlineKeyboardMarkup
from services.notification_service import send_notification
from services.payment_service import get_payment_account

def handle_payment_method(update, context):
    """
    Ä°stifadÉ™Ã§i Ã¶dÉ™niÅŸ metodunu seÃ§dikdÉ™n sonra, Ã¶dÉ™niÅŸ hesabatÄ± verilir.
    
    :param update: Telegram update mÉ™lumatlarÄ±
    :param context: Telegram konteksti
    :return: HeÃ§ bir ÅŸey qaytarmÄ±r
    """
    query = update.callback_query
    user_id = query.from_user.id
    payment_method = query.data.split('_')[0]  # M10 vÉ™ ya Card2Card
    selected_plan = query.data.split('_')[1]  # AbunÉ™lik planÄ±

    if payment_method == "M10":
        payment_message = f"Ã–dÉ™niÅŸ Ã¼Ã§Ã¼n M10 hesabÄ±: {get_payment_account(selected_plan, 'M10')}"
    elif payment_method == "Card2Card":
        payment_message = f"Ã–dÉ™niÅŸ Ã¼Ã§Ã¼n Card2Card hesabÄ±: {get_payment_account(selected_plan, 'Card2Card')}"
    
    # Kopyalama funksiyasÄ± É™lavÉ™ edirik
    buttons = [
        [InlineKeyboardButton("Kopyala", callback_data=f"copy_{payment_method}_{selected_plan}")],
        [InlineKeyboardButton("ğŸ”™ Geri", callback_data="back_to_main_menu")]
    ]
    reply_markup = InlineKeyboardMarkup(buttons)

    send_notification(user_id, payment_message)
    send_notification(ADMIN_USER_ID, f"Yeni Ã¶dÉ™niÅŸ tÉ™lÉ™b olunur: {payment_message}")
    send_notification(user_id, "Ã–dÉ™niÅŸi tamamladÄ±qdan sonra Ã§eki gÃ¶ndÉ™rin.")
    update.callback_query.message.edit_text(payment_message, reply_markup=reply_markup)

def handle_copy_payment_info(update, context):
    """
    Ä°stifadÉ™Ã§i Ã¶dÉ™niÅŸ hesabÄ± mÉ™lumatÄ±nÄ± kopyaladÄ±qda, onlara mÉ™lumat verir.
    
    :param update: Telegram update mÉ™lumatlarÄ±
    :param context: Telegram konteksti
    :return: HeÃ§ bir ÅŸey qaytarmÄ±r
    """
    query = update.callback_query
    user_id = query.from_user.id
    payment_method = query.data.split('_')[1]  # M10 vÉ™ ya Card2Card
    selected_plan = query.data.split('_')[2]  # AbunÉ™lik planÄ±
    
    # Kopyalanan hesab mÉ™lumatÄ±
    payment_account = get_payment_account(selected_plan, payment_method)
    
    # Kopyalanan mÉ™lumatÄ± istifadÉ™Ã§iyÉ™ bildiririk
    send_notification(user_id, f"Ã–dÉ™niÅŸ hesabÄ± kopyalandÄ±: {payment_account}")
